version: '3.3'
services:
  api:
    build: ./python-api
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./python-api/source:/app/source
      - ./python-api/logs:/app/logs
    env_file:
      - 'variables.env'
    environment:
      MONGODB_HOST: mongodb
      INFLUXDB_HOST: influxdb
    secrets:
      - api_secrets

  influx_mqtt_gateway:
    build: ./python-gateway
    env_file:
      - 'variables.env'
    restart: always
    volumes:
      - ./python-gateway/source:/app/source
      - ./python-gateway/logs:/app/logs
    secrets:
      - gateway_secrets

  modules:
    build: ./python-modules
    env_file:
      - 'variables.env'
    restart: always
    volumes:
      - ./python-modules/source:/app/source
      - ./python-modules/logs:/app/logs
    secrets:
      - modules_secrets

  weather:
    build: ./python-weather
    env_file:
      - 'variables.env'
    restart: always
    expose:
      - "5003"
    volumes:
      - ./python-weather/source:/app/source
      - ./python-weather/logs:/app/logs
    secrets:
      - weather_secrets

  home:
    build: ./go-home
    env_file:
      - 'variables.env'
    restart: always
    ports:
      - "5001:5001"
    volumes:
      - ./go-home/src:/app/src
      - ./go-home/logs:/app/logs
    secrets:
      - home_secrets

  grafana-datasource:
    build: ./go-grafana-datasource
    env_file:
      - 'variables.env'
    restart: always
    expose:
      - "5002"
    volumes:
      - ./go-grafana-datasource/src:/app/src
      - ./go-grafana-datasource/logs:/app/logs
    secrets:
      - grafana_datasource_secrets

  mongodb:
    restart: always
    image: mongo
    hostname: docker
    volumes:
      - ./mongodb:/data/db
    expose:
      - "27017"
    command: mongod --logpath=/dev/null --setParameter diagnosticDataCollectionEnabled=false # --quiet

  influxdb:
    image: influxdb:1.7
    
    env_file:
      - 'variables.env'
    volumes:
      # Mount for influxdb data directory
      - ./influxdb/data:/var/lib/influxdb
      # Mount for influxdb configuration
      - ./influxdb/config/:/etc/influxdb/
    expose:
      - "8086"
    restart: always

  grafana:
    user: $ID
    restart: always
    image: grafana/grafana:6.5.2
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config:/etc/grafana
      - ./certs:/grafana/certs
      - ./grafana/log:/var/log/grafana
    environment:
      - GF_INSTALL_PLUGINS=simpod-json-datasource 0.1.6
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID__FILE=/run/secrets/grafana_secrets_clientId
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET__FILE=/run/secrets/grafana_secrets_clientSecret
    secrets:
      - grafana_secrets_clientId
      - grafana_secrets_clientSecret

  mosquitto:
    image: jllopis/mosquitto
    restart: always
    volumes:
      - ./mosquitto/data:/var/lib/mosquitto
      - ./mosquitto/log:/var/log/mosquitto
      - ./mosquitto/config:/etc/mosquitto
      - ./mosquitto/mosquitto.d:/etc/mosquitto.d
      - ./certs:/etc/mosquitto/certs
    ports:
      - "8883:8883"
      - "1883:1883"

secrets:
  modules_secrets:
      file: ./python-modules/secrets
  weather_secrets:
    file: ./python-weather/secrets
  home_secrets:
      file: ./go-home/secrets
  grafana_datasource_secrets:
      file: ./go-grafana-datasource/secrets
  api_secrets:
      file: ./python-api/secrets
  gateway_secrets:
      file: ./python-gateway/secrets
  grafana_secrets_clientId:
      file: ./grafana/secrets/clientId
  grafana_secrets_clientSecret:
      file: ./grafana/secrets/clientSecret
  